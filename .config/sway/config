### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term "$TERMINAL"
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --

set $menusock "$XDG_RUNTIME_DIR/j4-dmenu-desktop.sock"
exec j4-dmenu-desktop --dmenu='bemenu -i --fn "Noto Sans 12" -H 30' --term=$term --wrapper='swaymsg -q exec' --wait-on=$menusock
set $menu echo >$menusock

set $laptop 'Chimei Innolux Corporation 0x14B1 0x00000000'

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
# You can get the names of your outputs by running: swaymsg -t get_outputs

bindswitch --reload --locked lid:on  output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

# exec 'shuf -er  ~/Pictures/backgrounds/apod/* | while read bg; do swaymsg -q "output * bg ${bg@Q} fill" && sleep 15m; done'
swaybg_command -
exec oguri
exec 'shuf -er  ~/Pictures/backgrounds/apod/* | while read bg; do ogurictl output "*" --image "$bg" && sleep 15m; done'

### Appearence

font 'Noto Sans 11'
# default_border normal 0
default_border none
gaps inner 10
smart_gaps on

exec gammastep

### Idle configuration

exec swayidle -w

### Input configuration
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:keyboard {
	repeat_delay 250
	repeat_rate 50
	xkb_layout 'us,hu'
	xkb_options ctrl:nocaps
}

input type:touchpad {
	drag enabled
	tap enabled
}

### Key bindings
#
# Basics:
#
	# Start a terminal
	bindsym $mod+Return exec $term

	# Kill focused window
	bindsym $mod+Shift+q kill

	# Start your launcher
	bindsym $mod+d exec $menu

	bindsym $mod+c exec bemenu-openfile

	# Drag floating windows by holding down $mod and left mouse button.
	# Resize them with right mouse button + $mod.
	# Despite the name, also works for non-floating windows.
	# Change normal to inverse to use left mouse button for resizing and right
	# mouse button for dragging.
	floating_modifier $mod normal

	# Reload the configuration file
	bindsym $mod+Shift+c reload

	# Exit sway (logs you out of your Wayland session)
	bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

	bindsym          $mod+S      sticky toggle
	bindsym --locked $mod+Ctrl+S exec systemctl suspend
	bindsym          $mod+Ctrl+L exec swaylock
	bindsym --locked Ctrl+Alt+K  input type:keyboard xkb_switch_layout next

	bindsym Print       exec wl-sshot rect
	bindsym Shift+Print exec wl-sshot active
	bindsym Ctrl+Print  exec wl-sshot full

	bindsym $mod+M exec mpv "ytdl://$(wl-paste -n)"

#
# Moving around:
#
	# Move your focus around
	bindsym $mod+$left focus left
	bindsym $mod+$down focus down
	bindsym $mod+$up focus up
	bindsym $mod+$right focus right
	# Or use $mod+[up|down|left|right]
	# bindsym $mod+Left focus left
	# bindsym $mod+Down focus down
	# bindsym $mod+Up focus up
	# bindsym $mod+Right focus right

	# Move the focused window with the same, but add Shift
	bindsym $mod+Shift+$left move left
	bindsym $mod+Shift+$down move down
	bindsym $mod+Shift+$up move up
	bindsym $mod+Shift+$right move right
	# Ditto, with arrow keys
	# bindsym $mod+Shift+Left move left
	# bindsym $mod+Shift+Down move down
	# bindsym $mod+Shift+Up move up
	# bindsym $mod+Shift+Right move right
#
# Workspaces:
#
	# Switch to workspace
	bindsym $mod+1 workspace number 1
	bindsym $mod+2 workspace number 2
	bindsym $mod+3 workspace number 3
	bindsym $mod+4 workspace number 4
	bindsym $mod+5 workspace number 5
	bindsym $mod+6 workspace number 6
	bindsym $mod+7 workspace number 7
	bindsym $mod+8 workspace number 8
	bindsym $mod+9 workspace number 9
	bindsym $mod+0 workspace number 10
	bindsym $mod+Tab       workspace next_on_output
	bindsym $mod+Shift+Tab workspace prev_on_output
	# Move focused container to workspace
	bindsym $mod+Shift+1 move container to workspace number 1
	bindsym $mod+Shift+2 move container to workspace number 2
	bindsym $mod+Shift+3 move container to workspace number 3
	bindsym $mod+Shift+4 move container to workspace number 4
	bindsym $mod+Shift+5 move container to workspace number 5
	bindsym $mod+Shift+6 move container to workspace number 6
	bindsym $mod+Shift+7 move container to workspace number 7
	bindsym $mod+Shift+8 move container to workspace number 8
	bindsym $mod+Shift+9 move container to workspace number 9
	bindsym $mod+Shift+0 move container to workspace number 10
	# Note: workspaces can have any name you want, not just numbers.
	# We just use 1-10 as the default.
#
# Layout stuff:
#
	# You can "split" the current object of your focus with
	# $mod+b or $mod+v, for horizontal and vertical splits
	# respectively.
	bindsym $mod+b splith
	bindsym $mod+v splitv

	# Switch the current container between different layout styles
	# bindsym $mod+s layout stacking
	bindsym $mod+w layout tabbed
	bindsym $mod+e layout toggle split

	# Make the current focus fullscreen
	bindsym $mod+f fullscreen

	# Toggle the current focus between tiling and floating mode
	bindsym $mod+Shift+space floating toggle

	# Swap focus between the tiling area and the floating area
	bindsym $mod+space focus mode_toggle

	# Move focus to the parent container
	bindsym $mod+a focus parent
#
# Scratchpad:
#
	# Sway has a "scratchpad", which is a bag of holding for windows.
	# You can send windows there and get them back later.

	# Move the currently focused window to the scratchpad
	bindsym $mod+Shift+minus move scratchpad

	# Show the next scratchpad window or hide the focused scratchpad window.
	# If there are multiple scratchpad windows, this command cycles through them.
	bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
	# left will shrink the containers width
	# right will grow the containers width
	# up will shrink the containers height
	# down will grow the containers height
	bindsym $left resize shrink width 10px
	bindsym $down resize grow height 10px
	bindsym $up resize shrink height 10px
	bindsym $right resize grow width 10px

	# Ditto, with arrow keys
	# bindsym Left resize shrink width 10px
	# bindsym Down resize grow height 10px
	# bindsym Up resize shrink height 10px
	# bindsym Right resize grow width 10px

	# Return to default mode
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# fn keys
#
	bindsym --locked XF86AudioMute          exec pactl set-sink-mute @DEFAULT_SINK@ toggle
	bindsym --locked XF86AudioLowerVolume   exec pactl set-sink-volume @DEFAULT_SINK@ -5%
	bindsym --locked XF86AudioRaiseVolume   exec pactl set-sink-volume @DEFAULT_SINK@ +5%
	bindsym          XF86AudioMicMute       exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
	bindsym          $mod+Ctrl+M            exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
	bindsym --locked XF86AudioPlay          exec playerctl play-pause
	bindsym --locked $mod+Down              exec playerctl play-pause
	bindsym --locked XF86AudioPause         exec playerctl pause
	bindsym          XF86AudioNext          exec playerctl next
	bindsym          $mod+Right             exec playerctl next
	bindsym          XF86AudioPrev          exec playerctl previous
	bindsym          $mod+Left              exec playerctl previous
	bindsym --locked XF86MonBrightnessDown  exec brightnessctl -n -e set 5%-
	bindsym --locked XF86MonBrightnessUp    exec brightnessctl -n -e set 5%+
	# bindsym XF86Display
	# bindsym XF86WLAN
	# bindsym XF86Tools
	# bindsym XF86Search
	# bindsym XF86LaunchA
	# bindsym XF86Explorer

#
# Misc
#
exec systemctl --user import-environment QT_QPA_PLATFORMTHEME
exec dbus-update-activation-environment --systemd QT_QPA_PLATFORMTHEME

exec nm-applet --indicator
exec blueman-applet
exec playerctld daemon

#
# Window specific stuff
#
for_window [title="Picture in picture"] {
	floating enable
	sticky enable
}

for_window [class="XEyes"] {
	floating enable
	sticky enable
}

for_window [app_id="org.kde.okular" title="New Text Note â€” Okular"] {
	floating enable
}

no_focus   [floating app_id="" title=".* is sharing your screen\."]
for_window [floating app_id="" title=".* is sharing your screen\."] {
	move absolute position -100000 -100000
}

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
	swaybar_command waybar

	position top

	# # When the status_command prints a new line to stdout, swaybar updates.
	# # The default just shows the current date and time.
	# status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

	# colors {
	# 	statusline #ffffff
	# 	background #323232
	# 	inactive_workspace #32323200 #32323200 #5c5c5c
	# }
}

include /etc/sway/config.d/*
